<Page x:Class="InitialProject.View.OwnerView.Renovations.ScheduleRenovationFormView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:val="clr-namespace:InitialProject.Validation"
        xmlns:local="clr-namespace:InitialProject.View.OwnerView.Renovations"
        mc:Ignorable="d"
        Title="ScheduleRenovationFormView" Height="637" Width="356">
    <Page.Background>
        <SolidColorBrush Color="lightgray" />
    </Page.Background>
    <Page.Resources>

        <!--Confirm button style-->
        <Style x:Key="ConfirmButtonStyle" TargetType="{x:Type Button}">

            <Setter Property="Background" Value="#3A3D55"/>
            <!-- set the button background color -->
            <Setter Property="Foreground" Value="#fff"/>
            <!-- set the text color of the button -->
            <Setter Property="FontSize" Value="20"/>
            <!-- set the font size of the button -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#005A9E"/>
                                <!-- set the background color when the mouse is over the button -->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#004F8E"/>
                                <!-- set the background color when the button is pressed -->
                            </Trigger>

                            <!--Button blocked, validation-->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=renovationDescription, Path=(Validation.HasError)}" Value="True"/>
                                    <Condition Binding="{Binding ElementName=selectedAvailableDate, Path=(Validation.HasError)}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!--Validation error template-->
        <ControlTemplate x:Key="ValidationErrorTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
            </Grid>
        </ControlTemplate>
        <!--End of Validation error template-->

        <!--Naslovi-->
        <Style x:Key="TitleStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#3A3D55"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"/>
            <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"/>
        </Style>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.1*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>

        <Button Grid.Row="0" Command="{Binding GoBackCommand}" Content="&lt; Go Back" Background="Transparent" BorderThickness="0" Foreground="#3A3D55" FontSize="16" HorizontalAlignment="Left" FontWeight="DemiBold">

        </Button>



        <Border Grid.Row="1" BorderThickness="0, 0, 0, 3" BorderBrush="#3A3D55" Padding="10">
            <Grid>
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
            <!--Accommodation name-->
            <TextBlock Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="30" FontWeight="DemiBold" Text="Renovation" Foreground="#3A3D55"></TextBlock>
            <!--Accommodation location-->
            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="10,5" >
                <TextBlock Text="Selected accommodation: " 
                           FontWeight="Bold"
                           Foreground="#3A3D55"
                           Margin="0,0,5,0"/>
                <TextBlock Text="" />
            </StackPanel>

            <TextBlock Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" FontWeight="DemiBold" Text="Select date range for renovations" Foreground="#3A3D55"></TextBlock>

            <!--From and to dates-->
            <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="10,5">
                <TextBlock Text="From:" 
                           FontWeight="Bold"
                           Margin="0,0,39,0"
                           Foreground="#3A3D55"/>
                    <DatePicker SelectedDate="{Binding FromDate, UpdateSourceTrigger=PropertyChanged}">
                    </DatePicker>

            </StackPanel>

            <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="10,5">
                <TextBlock Text="To:        " 
                           FontWeight="Bold"
                           Margin="10,0,20,0"
                           Foreground="#3A3D55"/>
                    <DatePicker SelectedDate="{Binding ToDate}"></DatePicker>

                </StackPanel>
            <StackPanel Grid.Row="5" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="10,5">
                <TextBlock Text="Renovation length:        " 
                           FontWeight="Bold"
                           Margin="10,0,0,0"
                           Foreground="#3A3D55"/>
                    <TextBox Width="30" Height="20" Text="{Binding RenovationLength}"></TextBox>

            </StackPanel>
            </Grid>
        </Border>




        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center"  Margin="10,20">
                <TextBlock Text="Select available date:" 
                           FontWeight="Bold"
                           Margin="0,0,10,0"
                           Foreground="#3A3D55"/>
                <ComboBox Width="100" 
                          x:Name="selectedAvailableDate"
                          ItemsSource="{Binding AvailableDates, UpdateSourceTrigger=PropertyChanged}"
                          ItemStringFormat="{}{0:MM}"
                          IsEditable="False">
                    <ComboBox.SelectedItem>
                        <Binding Path="SelectedStartDate">
                            <Binding.ValidationRules>
                                <val:ComboboxValidation/>
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedItem>
                </ComboBox>

            </StackPanel>

            <StackPanel Grid.Row="1" Orientation="Vertical" HorizontalAlignment="Left"  Margin="10,20">
                <TextBlock Text="Renovation description:" 
                           FontWeight="Bold"
                           Margin="0,0,10,0"
                           Foreground="#3A3D55"/>
                <TextBox Height="108" Width="335" 
                         x:Name="renovationDescription"
                         TextWrapping="Wrap">
                    <TextBox.Text>
                        <Binding Path="RenovationDescription" UpdateSourceTrigger="PropertyChanged" TargetNullValue=''>
                            <Binding.ValidationRules>
                                <val:EmptyStringValidation/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <Validation.ErrorTemplate>
                        <StaticResource ResourceKey="ValidationErrorTemplate" />
                    </Validation.ErrorTemplate>
                </TextBox>

            </StackPanel>


            <Button Grid.Row="2" 
                    Margin="20 100 20 100" Content="Submit" 
                    Style="{StaticResource ConfirmButtonStyle}"
                    Command="{Binding ScheduleRenovationCommand}">
            </Button>

        </Grid>

    </Grid>
</Page>
